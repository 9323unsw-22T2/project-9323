1.
curl --location --request POST '127.0.0.1:5000/auth/register' \
--header 'Content-Type: application/json' \
--data-raw '{
  "email": "123@gmail.com",
  "password": "789",
  "name": "joe"
}'
{
    "token": "2e16cc67-dd5c-4868-85a4-124408d0aec0",
    "user_id": 1
}



2.
curl --location --request POST '127.0.0.1:5000/auth/login' \
--header 'Content-Type: application/json' \
--data-raw '{
  "email": "123@gmail.com",
  "password": "789"
}'
{
    "coins": 0,
    "email": "123@gmail.com",
    "expertArea": null,
    "expertOrNot": "0",
    "id": 1,
    "isPpublic": "0",
    "name": "joe",
    "password": "789",
    "scores": 0,
    "token": "2e16cc67-dd5c-4868-85a4-124408d0aec0"
}





3.
curl --location --request POST '127.0.0.1:5000/article' \
--header 'user_id: 1' \
--header 'token: 2e16cc67-dd5c-4868-85a4-124408d0aec0' \
--header 'Content-Type: application/json' \
--data-raw '{
    "0": {
        "title": "this is a title",
        "step_title": "this is step_title0",
        "content": "this is a content in page 0"
    }
}'
{
    "article_id": 1
}




4.
curl --location --request POST '127.0.0.1:5000/questions/add' \
--header 'user_id: 1' \
--header 'token: 2e16cc67-dd5c-4868-85a4-124408d0aec0' \
--header 'Content-Type: application/json' \
--data-raw '{
    "title": "123",
    "content": "789"

}'
{
    "question_id": 1
}




5.
curl --location --request PATCH '127.0.0.1:5000/article/1/thumb_up' \
--header 'user_id: 1' \
--header 'token: 2e16cc67-dd5c-4868-85a4-124408d0aec0'
{
    "article": {
        "0": {
            "article_id": null,
            "author": 1,
            "content": "this is a content in page 0",
            "id": 1,
            "image": null,
            "is_deleted": 0,
            "reploy_ids": [],
            "step_number": 0,
            "step_title": "this is step_title0",
            "thumb_up_by": [
                1
            ],
            "time_created": 1658717744,
            "time_modified": 1658717744,
            "title": "this is a title",
            "video": null
        }
    }
}






6.
curl --location --request PATCH '127.0.0.1:5000/questions/1/like' \
--header 'user_id: 1' \
--header 'token: 2e16cc67-dd5c-4868-85a4-124408d0aec0'
{
    "question": {
        "0": {
            "TYPE": "QUESTION",
            "author": 1,
            "content": "789",
            "id": 1,
            "image": null,
            "isDeleted": 0,
            "replyIds": "[]",
            "thumbUpBy": "[1]",
            "timeCreated": 1658717751,
            "timeUpdated": 1658717751,
            "title": "123",
            "video": null
        }
    }
}




7.
curl --location --request GET '127.0.0.1:5000/questions_like/1' \
--header 'user_id: 1' \
--header 'token: 2e16cc67-dd5c-4868-85a4-124408d0aec0'
{
    "questions_like": [
        {
            "TYPE": "QUESTION",
            "author": 1,
            "content": "789",
            "id": 1,
            "image": null,
            "isDeleted": 0,
            "replyIds": "[]",
            "thumbUpBy": "[1]",
            "timeCreated": 1658717751,
            "timeUpdated": 1658717751,
            "title": "123",
            "video": null
        }
    ]
}




8.
curl --location --request GET '127.0.0.1:5000/articles_like/1' \
--header 'user_id: 1' \
--header 'token: 2e16cc67-dd5c-4868-85a4-124408d0aec0'
{
    "articles_like": [
        {
            "TYPE": "ARTICLE",
            "articleId": null,
            "author": 1,
            "content": "\"this is a content in page 0\"",
            "id": 1,
            "image": null,
            "isDeleted": 0,
            "replyIds": "[]",
            "stepNumber": 0,
            "stepTitle": "this is step_title0",
            "thumbUpBy": "[1]",
            "timeCreated": 1658717744,
            "timeUpdated": 1658717744,
            "title": "this is a title",
            "video": null
        }
    ]
}


9. put message
// send one message
POST
header user_id
content{
    target_user id
    message
    time
}

add it to both sender's messagelist and receiver's messagelist
sender's is readed, receiver's is unreaded
比如A（id=1）发了一条消息给B(id=2)，原来两个人的messagelist都是空的，同时往两边attribute都加上数据
变成A的是
    messagelist:{
        2:[
            {sender:'A',message:'',time:'',readed:'true'}
        ],
    }
变成B的是
    messagelist:{
        1:[
            {sender:'A',message:'',time:'',readed:'false'}
        ],
    }
9. get messaage
// get one user's all message 
header user_id

return content{
    
    messagelist:{
        target_userid:[
            {sender:'me',message:'',time:'',readed:'true'},{sender:'target_user',message:'',time:'',reader:'false'}
        ],
        target_userid:[
            {sender:'me',message:''，readed:'true'},{sender:'me',message:'',reader:'true'}
        ]
    }
}
9.get messaage
// read all message related to one user
header user_id
send{
    target_id
}


10.delete message
// delete all message related to one user, only current user side
header user_id
send{
    target_id
}
假如A删掉一条消息
A的变成
    messagelist:{
    }
B的这一侧还是
    messagelist:{
        1:[
            {sender:'A',message:'',time:'',readed:'false'}
        ],
    }

